github databricks token: 4588c4ca6d895781220cc51dc46d74258090ae7c



az
Connect-AzAccount

$secret1 = -join ((33..126) | Get-Random -Count 44 | % {[char]$_})




# Variables
#-------------------------------
$projectName = "ag0819"
$WebsiteName ="geosense"
$upn = "a.goossens@mmguide.nl"
$templateFile = "C:\Users\a.goossens\OneDrive - MM-Guide BV\github\GeoSense\Templates\Deploy.json"
$SQLCommand= Get-Content "C:\Users\a.goossens\OneDrive - MM-Guide BV\github\GeoSense\datamodel.sql" -Raw 

# derived variables
#-------------------------------
$resourceGroupName = "${projectName}rg"
$adUserId = (Get-AzADUser -UserPrincipalName $upn).Id
$IPAddress =(Invoke-WebRequest -uri "http://ifconfig.me/ip").Content


# deploy resourcegroup
#-------------------------------
New-AzResourceGroup -Name $resourceGroupName -Location "westeurope"

# deploy keyvault
#-------------------------------
New-AzResourceGroupDeployment `
  -templateFile $templateFile `
  -Name DeployKeyVault `
  -ResourceGroupName $resourceGroupName `
  -projectName $projectName `
  -adUserId $adUserId `
  -WebsiteName $WebsiteName
  -IpAddress $IPAddress

#  upload data
#-------------------------------
# get storage resource
$StorageResource =  Get-AzResource -ResourceGroupName $resourceGroupName -ResourceType "Microsoft.Storage/storageAccounts"
# Get Storage Account Key
$storageAccountKey = (Get-AzStorageAccountKey -ResourceGroupName $resourceGroupName -AccountName $StorageResource.name).Value[0]
# Set AzStorageContext
$StorageContext = New-AzStorageContext -StorageAccountName $StorageResource.name-StorageAccountKey $storageAccountKey
# set container name
$containerName = "uploads"
# create container
New-AzStorageContainer -Name $containerName -Context $StorageContext -Permission blob
# upload files
Set-AzStorageBlobContent -File "C:\Users\a.goossens\OneDrive - MM-Guide BV\geosense\DINOBRO_Entities_20200623.json" `
  -Container $containerName `
  -Blob "DINOBRO_Entities_20200623.json" `
  -Context $StorageContext 
Set-AzStorageBlobContent -File "C:\Users\a.goossens\OneDrive - MM-Guide BV\geosense\DINOBRO_EntityDescriptions_20200623.json" `
  -Container $containerName `
  -Blob "DINOBRO_EntityDescriptions_20200623.json" `
  -Context $StorageContext 
Set-AzStorageBlobContent -File "C:\Users\a.goossens\OneDrive - MM-Guide BV\geosense\DINOBRO_TimeEntities_20200623.json" `
  -Container $containerName `
  -Blob "DINOBRO_TimeEntities_20200623.json" `
  -Context $StorageContext 
Set-AzStorageBlobContent -File "C:\Users\a.goossens\OneDrive - MM-Guide BV\geosense\SUNFLOWER_Entities_20200616.json" `
  -Container $containerName `
  -Blob "SUNFLOWER_Entities_20200616.json" `
  -Context $StorageContext 
Set-AzStorageBlobContent -File "C:\Users\a.goossens\OneDrive - MM-Guide BV\geosense\SUNFLOWER_EntityDescriptions_20200616.json" `
  -Container $containerName `
  -Blob "SUNFLOWER_EntityDescriptions_20200616.json" `
  -Context $StorageContext 
Set-AzStorageBlobContent -File "C:\Users\a.goossens\OneDrive - MM-Guide BV\geosense\SUNFLOWER_TimeEntities_20200616.json" `
  -Container $containerName `
  -Blob "SUNFLOWER_TimeEntities_20200616.json" `
  -Context $StorageContext 

# deploy datamodel
#-------------------------------	
	$SQLCommand= Get-Content "C:\Users\a.goossens\OneDrive - MM-Guide BV\github\GeoSense\datamodel.sql" -Raw 
	$SQLCommand= $SQLCommand -replace "'","''"
	$SQLCommand= $SQLCommand -replace "`t"," "
	$SQLCommand= $SQLCommand -replace "     "," "
	$SQLCommand= $SQLCommand -replace "    "," "
	$SQLCommand= $SQLCommand -replace "   "," "
	$SQLCommand= $SQLCommand -replace "  "," "
	$SQLCommand= $SQLCommand -replace "`n ","`n"
	$SQLCommand= $SQLCommand -replace " `r","`r"
	$SQLCommand= $SQLCommand -replace "`nGO`r","');exec('"
	$SQLCommand= "exec('${SQLCommand}')"
	$scriptscon = New-Object System.Data.SqlClient.SqlConnection
        $scriptcmd = New-Object System.Data.SqlClient.SqlCommand
	$scriptcmd.CommandTimeout = 0
	$sqlservername=(Get-AzResource -ResourceGroupName $resourceGroupName -ResourceType "Microsoft.Sql/servers").name
	$databasename =(Get-AzResource -ResourceGroupName $resourceGroupName -ResourceType "Microsoft.Sql/servers/databases" -name database* ).name
	$databasename = $databasename -replace "${sqlservername}/",""
	$scriptscon.ConnectionString = "Server=tcp:$sqlservername.database.windows.net,1433;Initial Catalog=$databasename;Persist Security Info=False;User ID=Ard;Password=Goossens.;MultipleActiveResultSets=False;Encrypt=True;TrustServerCertificate=False;Connection Timeout=30;"
	$scriptcmd.Connection = $scriptscon
	$scriptscon.Open()
        $scriptcmd.CommandText = $SQLCommand
	$scriptdetails = $scriptcmd.ExecuteReader()
	$scriptscon.Dispose()
	$scriptcmd.Dispose()



-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
# set up deployment from github
#-------------------------------
	go into the resourcegroup.
	choose app service
	in the app service, go to deployment center
		within "Continuous Deployment (CI / CD)" choose github 
	click continue
		choose github actions
	click continue
		choose GeoUpload as repository
		choose master as branch 
		choose add as workflow option
		choose .NET core as runtime stack
		version should be 3.1 (default)
	click continue
	click finish
	in git:
cd "c:\Users\a.goossens\OneDrive - MM-Guide BV\github"
cd geoupload
git pull origin master
git push origin master

	wait until website is up ( few minutes)

# link up website to storage
#-------------------------------
$StorageResource = Get-AzResource -ResourceGroupName $resourceGroupName  -ResourceType "Microsoft.Storage/storageAccounts"

$connection = (az storage account show-connection-string --name $StorageResource.name --output tsv)
az webapp config appsettings set --name $WebsiteName --resource-group $resourceGroupName --settings AzureStorageConfig:ConnectionString=$connection AzureStorageConfig:FileContainerName=uploads





# 
#-------------------------------


# 
#-------------------------------

https://geosense.azurewebsites.net


